{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport React, { useState, useEffect } from 'react';\nimport Head from 'next/head';\nimport AlphaBanner from 'components/base/AlphaBanner';\nimport MainHeader from 'components/base/MainHeader';\nimport TernoaWallet from 'components/base/TernoaWallet';\nimport Profile from 'components/pages/Profile';\nimport NotAvailableModal from 'components/base/NotAvailable';\nimport SuccessPopup from 'components/base/SuccessPopup';\nimport cookies from 'next-cookies';\nimport { getUser } from 'actions/user';\nimport { getProfileNFTS, getCreatorNFTS } from 'actions/nft';\nimport { getFollowers, getFollowed } from 'actions/follower';\nimport { getLikedNFTs } from 'actions/user';\n\nconst ProfilePage = ({\n  user,\n  created,\n  owned,\n  liked,\n  followers,\n  followed\n}) => {\n  const {\n    0: modalExpand,\n    1: setModalExpand\n  } = useState(false);\n  const {\n    0: notAvailable,\n    1: setNotAvailable\n  } = useState(false);\n  const {\n    0: successPopup,\n    1: setSuccessPopup\n  } = useState(false);\n  const {\n    0: walletUser,\n    1: setWalletUser\n  } = useState(user);\n  const {\n    0: createdNfts,\n    1: setCreatedNfts\n  } = useState(created);\n  const {\n    0: ownedNfts,\n    1: setOwnedNfts\n  } = useState(owned);\n  const {\n    0: likedNfts,\n    1: setLikedNfts\n  } = useState(liked);\n  const {\n    0: followersUsers,\n    1: setFollowersUsers\n  } = useState(followers);\n  const {\n    0: followedUsers,\n    1: setFollowedUsers\n  } = useState(followed);\n  useEffect(() => {\n    async function callBack() {\n      try {\n        let res = await getUser(window.walletId);\n        setWalletUser(res);\n      } catch (error) {\n        console.error(error);\n      }\n    }\n\n    if (window.isRNApp && window.walletId) callBack();\n  }, []);\n  return /*#__PURE__*/_jsxs(_Fragment, {\n    children: [/*#__PURE__*/_jsxs(Head, {\n      children: [/*#__PURE__*/_jsx(\"title\", {\n        children: \"SecretNFT - My account\"\n      }), /*#__PURE__*/_jsx(\"meta\", {\n        name: \"viewport\",\n        content: \"initial-scale=1.0, width=device-width\"\n      }), /*#__PURE__*/_jsx(\"meta\", {\n        name: \"description\",\n        content: \"Ternoa - Your profile.\"\n      }), /*#__PURE__*/_jsx(\"meta\", {\n        name: \"og:image\",\n        content: \"ternoa-social-banner.jpg\"\n      })]\n    }), modalExpand && /*#__PURE__*/_jsx(TernoaWallet, {\n      setModalExpand: setModalExpand\n    }), notAvailable && /*#__PURE__*/_jsx(NotAvailableModal, {\n      setNotAvailable: setNotAvailable\n    }), successPopup && /*#__PURE__*/_jsx(SuccessPopup, {\n      setSuccessPopup: setSuccessPopup\n    }), /*#__PURE__*/_jsx(AlphaBanner, {}), /*#__PURE__*/_jsx(MainHeader, {\n      user: walletUser,\n      setModalExpand: setModalExpand\n    }), /*#__PURE__*/_jsx(Profile, {\n      user: walletUser,\n      setUser: setWalletUser,\n      createdNFTS: createdNfts,\n      setCreatedNFTS: setCreatedNfts,\n      ownedNFTS: ownedNfts,\n      setOwnedNFTS: setOwnedNfts,\n      likedNfts: likedNfts,\n      setLikedNfts: setLikedNfts,\n      followers: followersUsers,\n      setFollowers: setFollowersUsers,\n      followed: followedUsers,\n      setFollowed: setFollowedUsers,\n      setModalExpand: setModalExpand,\n      setNotAvailable: setNotAvailable,\n      setSuccessPopup: setSuccessPopup\n    })]\n  });\n};\n\nexport async function getServerSideProps(ctx) {\n  let user = null,\n      created = [],\n      owned = [],\n      liked = [],\n      followers = [],\n      followed = [];\n  const token = cookies(ctx).token;\n  const promises = [];\n\n  if (token) {\n    promises.push(new Promise(success => {\n      getUser(token).then(_user => {\n        user = _user;\n        success();\n      }).catch(success);\n    }));\n    promises.push(new Promise(success => {\n      getCreatorNFTS(token).then(_nfts => {\n        created = _nfts;\n        success();\n      }).catch(success);\n    }));\n    promises.push(new Promise(success => {\n      getProfileNFTS(token).then(_nfts => {\n        owned = _nfts;\n        success();\n      }).catch(success);\n    }));\n    promises.push(new Promise(success => {\n      getLikedNFTs(token).then(_nfts => {\n        liked = _nfts;\n        success();\n      }).catch(success);\n    }));\n    promises.push(new Promise(success => {\n      getFollowers(token).then(_users => {\n        followers = _users;\n        success();\n      }).catch(success);\n    }));\n    promises.push(new Promise(success => {\n      getFollowed(token).then(_users => {\n        followed = _users;\n        success();\n      }).catch(success);\n    }));\n  }\n\n  await Promise.all(promises);\n\n  if (!user) {\n    return {\n      redirect: {\n        permanent: false,\n        destination: '/'\n      }\n    };\n  }\n\n  return {\n    props: {\n      user,\n      created,\n      owned,\n      liked,\n      followers,\n      followed\n    }\n  };\n}\nexport default ProfilePage;","map":null,"metadata":{},"sourceType":"module"}