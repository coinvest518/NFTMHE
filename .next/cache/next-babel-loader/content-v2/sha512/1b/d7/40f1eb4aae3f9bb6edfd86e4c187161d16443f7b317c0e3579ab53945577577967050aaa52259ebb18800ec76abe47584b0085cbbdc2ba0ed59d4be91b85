{"ast":null,"code":"import _defineProperty from \"C:/Users/mildh/Desktop/nft/node_modules/@babel/runtime/helpers/esm/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport io from 'socket.io-client';\nexport function connect(endPoint, query) {\n  var options = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : null;\n  var timeout = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : 1 * 60 * 1000;\n  var socket = io(\"\".concat(process.env.NEXT_PUBLIC_SOCKETIO_URL).concat(endPoint), _objectSpread({\n    query: query,\n    transports: ['websocket'],\n    forceNew: true\n  }, options));\n  var disconnectTimeout = setTimeout(function () {\n    // autodisconnect after timeout if still open\n    if (socket !== null && socket !== void 0 && socket.connected) {\n      socket.close();\n    }\n  }, timeout);\n  socket.on('disconnect', function () {\n    clearTimeout(disconnectTimeout);\n  });\n  return socket;\n}","map":null,"metadata":{},"sourceType":"module"}