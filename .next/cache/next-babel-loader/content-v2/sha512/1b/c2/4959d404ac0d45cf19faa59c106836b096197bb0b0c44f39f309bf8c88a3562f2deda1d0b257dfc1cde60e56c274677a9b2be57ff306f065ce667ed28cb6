{"ast":null,"code":"import { jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport _toConsumableArray from \"C:/Users/mildh/Desktop/nft/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\nimport _defineProperty from \"C:/Users/mildh/Desktop/nft/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _regeneratorRuntime from \"C:/Users/mildh/Desktop/nft/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"C:/Users/mildh/Desktop/nft/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React, { useState, useEffect } from 'react';\nimport style from './NftCard.module.scss';\nimport Creator from '../Creator';\nimport Router from 'next/router';\nimport { useMediaQuery } from 'react-responsive';\nimport Media from '../Media';\nimport Heart from 'components/assets/heart';\nimport { computeCaps, computeTiime } from 'utils/strings';\nimport { likeNFT, unlikeNFT } from 'actions/user';\nimport { getNFT } from 'actions/nft';\n\nfunction manageRouting(e, id) {\n  e.stopPropagation();\n  Router.push(\"/\".concat(id));\n}\n\nvar NftCard = function NftCard(_ref) {\n  var _user$likedNFTs, _item$cryptedMedia, _item$media;\n\n  var item = _ref.item,\n      mode = _ref.mode,\n      isDragging = _ref.isDragging,\n      user = _ref.user,\n      setUser = _ref.setUser,\n      likedNfts = _ref.likedNfts,\n      setLikedNfts = _ref.setLikedNfts;\n\n  var _useState = useState(false),\n      isHovering = _useState[0],\n      setIsHovering = _useState[1];\n\n  var _useState2 = useState(null),\n      type = _useState2[0],\n      setType = _useState2[1];\n\n  var _useState3 = useState(false),\n      likeLoading = _useState3[0],\n      setLikeLoading = _useState3[1];\n\n  var isLiked = !user ? undefined : (_user$likedNFTs = user.likedNFTs) === null || _user$likedNFTs === void 0 ? void 0 : _user$likedNFTs.includes(item.id);\n  useEffect(function () {\n    function callBack() {\n      return _callBack.apply(this, arguments);\n    }\n\n    function _callBack() {\n      _callBack = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n        var res;\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                _context.prev = 0;\n                _context.next = 3;\n                return fetch(item.media.url, {\n                  method: 'HEAD'\n                });\n\n              case 3:\n                res = _context.sent;\n                setType(res.headers.get('Content-Type'));\n                return _context.abrupt(\"return\", res);\n\n              case 8:\n                _context.prev = 8;\n                _context.t0 = _context[\"catch\"](0);\n                console.log('Error :', _context.t0);\n\n              case 11:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, null, [[0, 8]]);\n      }));\n      return _callBack.apply(this, arguments);\n    }\n\n    callBack();\n  }, []);\n\n  function manageClass() {\n    if (mode === 'grid') {\n      return style.NFTGrid;\n    } else if (mode === 'profile') {\n      return style.NFTProfile;\n    } else {\n      return style.NFT;\n    }\n  }\n\n  var isMobile = useMediaQuery({\n    query: '(max-device-width: 720px)'\n  });\n\n  var handleLikeDislike = /*#__PURE__*/function () {\n    var _ref2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2(nftId) {\n      var res, newlyLikedNFT;\n      return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              _context2.prev = 0;\n              res = null;\n\n              if (!(!likeLoading && isLiked !== undefined && user)) {\n                _context2.next = 13;\n                break;\n              }\n\n              setLikeLoading(true);\n\n              if (isLiked) {\n                _context2.next = 10;\n                break;\n              }\n\n              _context2.next = 7;\n              return likeNFT(user.walletId, nftId);\n\n            case 7:\n              res = _context2.sent;\n              _context2.next = 13;\n              break;\n\n            case 10:\n              _context2.next = 12;\n              return unlikeNFT(user.walletId, nftId);\n\n            case 12:\n              res = _context2.sent;\n\n            case 13:\n              if (!(res !== null && setUser)) {\n                _context2.next = 24;\n                break;\n              }\n\n              setUser(_objectSpread(_objectSpread({}, user), res));\n\n              if (!(likedNfts && setLikedNfts)) {\n                _context2.next = 24;\n                break;\n              }\n\n              if (!isLiked) {\n                _context2.next = 20;\n                break;\n              }\n\n              setLikedNfts(likedNfts.filter(function (x) {\n                return x.id !== nftId;\n              }));\n              _context2.next = 24;\n              break;\n\n            case 20:\n              _context2.next = 22;\n              return getNFT(nftId);\n\n            case 22:\n              newlyLikedNFT = _context2.sent;\n              if (newlyLikedNFT) setLikedNfts([].concat(_toConsumableArray(likedNfts), [newlyLikedNFT]));\n\n            case 24:\n              setLikeLoading(false);\n              _context2.next = 31;\n              break;\n\n            case 27:\n              _context2.prev = 27;\n              _context2.t0 = _context2[\"catch\"](0);\n              setLikeLoading(false);\n              console.error(_context2.t0);\n\n            case 31:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, _callee2, null, [[0, 27]]);\n    }));\n\n    return function handleLikeDislike(_x) {\n      return _ref2.apply(this, arguments);\n    };\n  }();\n\n  return /*#__PURE__*/_jsxs(\"div\", {\n    onClick: function onClick() {\n      return !isDragging && Router.push(\"/nft/\".concat(item.id));\n    },\n    className: manageClass(),\n    onFocus: function onFocus() {\n      return false;\n    },\n    onBlur: function onBlur() {\n      return false;\n    },\n    onMouseOver: function onMouseOver() {\n      return !isMobile && setIsHovering(true);\n    },\n    onMouseOut: function onMouseOut() {\n      return !isMobile && setIsHovering(false);\n    },\n    children: [/*#__PURE__*/_jsx(Media, {\n      src: item.media.url,\n      type: type,\n      alt: \"imgnft\",\n      draggable: \"false\",\n      className: \"\".concat(style.NFTIMG, \" \").concat((type === null || type === void 0 ? void 0 : type.substr(0, 5)) === 'image' && isHovering ? style.ImgScaling : \"\")\n    }), /*#__PURE__*/_jsx(\"span\", {\n      className: style.QtyLabel,\n      children: \"\".concat(typeof item.totalListedNft !== 'undefined' ? item.totalListedNft : 1)\n    }), ((_item$cryptedMedia = item.cryptedMedia) === null || _item$cryptedMedia === void 0 ? void 0 : _item$cryptedMedia.url) !== ((_item$media = item.media) === null || _item$media === void 0 ? void 0 : _item$media.url) && !isHovering && /*#__PURE__*/_jsx(\"span\", {\n      className: style.SecretLabel,\n      children: \"S\"\n    }), /*#__PURE__*/_jsx(\"div\", {\n      className: isHovering ? \"\".concat(style.Filter, \" \").concat(style.Fade) : \"\".concat(style.Filter, \" \").concat(style.Hide)\n    }), /*#__PURE__*/_jsxs(\"div\", {\n      className: isHovering ? \"\".concat(style.Container) : style.Hide,\n      children: [isLiked !== undefined ? /*#__PURE__*/_jsx(\"div\", {\n        className: isHovering ? \"\".concat(style.Favorite, \" \\n                 \").concat(style.FadeSimple, \" \\n                 \").concat(isLiked ? style.Favorited : \"\", \" \\n                 \").concat(likeLoading ? style.Disabled : \"\") : style.Hide,\n        onClick: function onClick(e) {\n          e.stopPropagation();\n          handleLikeDislike(item.id);\n        },\n        children: /*#__PURE__*/_jsx(Heart, {\n          className: style.HeartSVG\n        })\n      }) : /*#__PURE__*/_jsx(\"div\", {}), /*#__PURE__*/_jsxs(\"div\", {\n        className: style.Infos,\n        children: [/*#__PURE__*/_jsxs(\"div\", {\n          onClick: function onClick(e) {\n            return manageRouting(e, item.creatorData.walletId);\n          },\n          className: style.Auth,\n          children: [item.creatorData && /*#__PURE__*/_jsx(Creator, {\n            user: item.creatorData,\n            className: isHovering ? style.Slide : '',\n            size: \"card\",\n            showTooltip: false\n          }), item.creatorData && /*#__PURE__*/_jsx(\"div\", {\n            className: isHovering ? \"\".concat(style.Author, \" \").concat(style.Fade) : style.Author,\n            children: item.creatorData.name\n          })]\n        }), (item.price && Number(item.price) > 0 || item.priceTiime && Number(item.priceTiime)) && /*#__PURE__*/_jsxs(\"div\", {\n          className: isHovering ? \"\".concat(style.Button, \" \").concat(style.FadeLong) : style.Button,\n          children: [/*#__PURE__*/_jsxs(\"div\", {\n            className: style.Price,\n            children: [item.price && Number(item.price) > 0 && \"\".concat(computeCaps(Number(item.price)), \" CAPS\"), item.price && Number(item.price) > 0 && item.priceTiime && Number(item.priceTiime) && \" / \", item.priceTiime && Number(item.priceTiime) > 0 && \"\".concat(computeTiime(Number(item.priceTiime)), \" TIIME\")]\n          }), /*#__PURE__*/_jsx(\"div\", {\n            className: style.ButtonText,\n            children: \"Buy\"\n          })]\n        })]\n      })]\n    })]\n  });\n};\n\nexport default NftCard;","map":null,"metadata":{},"sourceType":"module"}