{"ast":null,"code":"import { jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React, { useState, useEffect } from 'react';\nimport style from './NftCard.module.scss';\nimport Creator from '../Creator';\nimport Router from 'next/router';\nimport { useMediaQuery } from 'react-responsive';\nimport Media from '../Media';\nimport Heart from 'components/assets/heart';\nimport { computeCaps, computeTiime } from 'utils/strings';\nimport { likeNFT, unlikeNFT } from 'actions/user';\nimport { getNFT } from 'actions/nft';\n\nfunction manageRouting(e, id) {\n  e.stopPropagation();\n  Router.push(`/${id}`);\n}\n\nconst NftCard = ({\n  item,\n  mode,\n  isDragging,\n  user,\n  setUser,\n  likedNfts,\n  setLikedNfts\n}) => {\n  var _user$likedNFTs, _item$cryptedMedia, _item$media;\n\n  const {\n    0: isHovering,\n    1: setIsHovering\n  } = useState(false);\n  const {\n    0: type,\n    1: setType\n  } = useState(null);\n  const {\n    0: likeLoading,\n    1: setLikeLoading\n  } = useState(false);\n  const isLiked = !user ? undefined : (_user$likedNFTs = user.likedNFTs) === null || _user$likedNFTs === void 0 ? void 0 : _user$likedNFTs.includes(item.id);\n  useEffect(() => {\n    async function callBack() {\n      try {\n        let res = await fetch(item.media.url, {\n          method: 'HEAD'\n        });\n        setType(res.headers.get('Content-Type'));\n        return res;\n      } catch (err) {\n        console.log('Error :', err);\n      }\n    }\n\n    callBack();\n  }, []);\n\n  function manageClass() {\n    if (mode === 'grid') {\n      return style.NFTGrid;\n    } else if (mode === 'profile') {\n      return style.NFTProfile;\n    } else {\n      return style.NFT;\n    }\n  }\n\n  const isMobile = useMediaQuery({\n    query: '(max-device-width: 720px)'\n  });\n\n  const handleLikeDislike = async nftId => {\n    try {\n      let res = null;\n\n      if (!likeLoading && isLiked !== undefined && user) {\n        setLikeLoading(true);\n\n        if (!isLiked) {\n          res = await likeNFT(user.walletId, nftId);\n        } else {\n          res = await unlikeNFT(user.walletId, nftId);\n        }\n      }\n\n      if (res !== null && setUser) {\n        setUser(_objectSpread(_objectSpread({}, user), res));\n\n        if (likedNfts && setLikedNfts) {\n          if (isLiked) {\n            setLikedNfts(likedNfts.filter(x => x.id !== nftId));\n          } else {\n            let newlyLikedNFT = await getNFT(nftId);\n            if (newlyLikedNFT) setLikedNfts([...likedNfts, newlyLikedNFT]);\n          }\n        }\n      }\n\n      setLikeLoading(false);\n    } catch (err) {\n      setLikeLoading(false);\n      console.error(err);\n    }\n  };\n\n  return /*#__PURE__*/_jsxs(\"div\", {\n    onClick: () => !isDragging && Router.push(`/nft/${item.id}`),\n    className: manageClass(),\n    onFocus: () => false,\n    onBlur: () => false,\n    onMouseOver: () => !isMobile && setIsHovering(true),\n    onMouseOut: () => !isMobile && setIsHovering(false),\n    children: [/*#__PURE__*/_jsx(Media, {\n      src: item.media.url,\n      type: type,\n      alt: \"imgnft\",\n      draggable: \"false\",\n      className: `${style.NFTIMG} ${(type === null || type === void 0 ? void 0 : type.substr(0, 5)) === 'image' && isHovering ? style.ImgScaling : \"\"}`\n    }), /*#__PURE__*/_jsx(\"span\", {\n      className: style.QtyLabel,\n      children: `${typeof item.totalListedNft !== 'undefined' ? item.totalListedNft : 1}`\n    }), ((_item$cryptedMedia = item.cryptedMedia) === null || _item$cryptedMedia === void 0 ? void 0 : _item$cryptedMedia.url) !== ((_item$media = item.media) === null || _item$media === void 0 ? void 0 : _item$media.url) && !isHovering && /*#__PURE__*/_jsx(\"span\", {\n      className: style.SecretLabel,\n      children: \"S\"\n    }), /*#__PURE__*/_jsx(\"div\", {\n      className: isHovering ? `${style.Filter} ${style.Fade}` : `${style.Filter} ${style.Hide}`\n    }), /*#__PURE__*/_jsxs(\"div\", {\n      className: isHovering ? `${style.Container}` : style.Hide,\n      children: [isLiked !== undefined ? /*#__PURE__*/_jsx(\"div\", {\n        className: isHovering ? `${style.Favorite} \n                 ${style.FadeSimple} \n                 ${isLiked ? style.Favorited : \"\"} \n                 ${likeLoading ? style.Disabled : \"\"}` : style.Hide,\n        onClick: e => {\n          e.stopPropagation();\n          handleLikeDislike(item.id);\n        },\n        children: /*#__PURE__*/_jsx(Heart, {\n          className: style.HeartSVG\n        })\n      }) : /*#__PURE__*/_jsx(\"div\", {}), /*#__PURE__*/_jsxs(\"div\", {\n        className: style.Infos,\n        children: [/*#__PURE__*/_jsxs(\"div\", {\n          onClick: e => manageRouting(e, item.creatorData.walletId),\n          className: style.Auth,\n          children: [item.creatorData && /*#__PURE__*/_jsx(Creator, {\n            user: item.creatorData,\n            className: isHovering ? style.Slide : '',\n            size: \"card\",\n            showTooltip: false\n          }), item.creatorData && /*#__PURE__*/_jsx(\"div\", {\n            className: isHovering ? `${style.Author} ${style.Fade}` : style.Author,\n            children: item.creatorData.name\n          })]\n        }), (item.price && Number(item.price) > 0 || item.priceTiime && Number(item.priceTiime)) && /*#__PURE__*/_jsxs(\"div\", {\n          className: isHovering ? `${style.Button} ${style.FadeLong}` : style.Button,\n          children: [/*#__PURE__*/_jsxs(\"div\", {\n            className: style.Price,\n            children: [item.price && Number(item.price) > 0 && `${computeCaps(Number(item.price))} CAPS`, item.price && Number(item.price) > 0 && item.priceTiime && Number(item.priceTiime) && ` / `, item.priceTiime && Number(item.priceTiime) > 0 && `${computeTiime(Number(item.priceTiime))} TIIME`]\n          }), /*#__PURE__*/_jsx(\"div\", {\n            className: style.ButtonText,\n            children: \"Buy\"\n          })]\n        })]\n      })]\n    })]\n  });\n};\n\nexport default NftCard;","map":null,"metadata":{},"sourceType":"module"}