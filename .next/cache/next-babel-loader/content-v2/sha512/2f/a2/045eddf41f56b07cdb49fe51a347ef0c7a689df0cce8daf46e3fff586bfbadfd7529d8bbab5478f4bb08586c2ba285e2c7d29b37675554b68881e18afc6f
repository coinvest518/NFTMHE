{"ast":null,"code":"import { jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport React, { useEffect, useState } from 'react';\nimport style from './Infos.module.scss';\nimport Badge from 'components/assets/badge';\nimport CopyPaste from 'components/assets/copypaste';\nimport Twitter from 'components/assets/SocialMedias/Twitter';\nimport gradient from 'random-gradient';\nimport { middleEllipsis } from 'utils/strings';\nimport { follow, unfollow, isUserFollowing } from 'actions/follower';\n\nconst Infos = ({\n  profile,\n  setProfile,\n  user\n}) => {\n  const {\n    0: isUserFollowingProfile,\n    1: setIsUserFollowingProfile\n  } = useState(null);\n  const {\n    0: followLoading,\n    1: setFollowLoading\n  } = useState(false);\n  const bgGradient = profile ? {\n    background: gradient(profile.name)\n  } : {};\n\n  const handleFollowUnfollow = async (isUnfollow = false) => {\n    try {\n      if (!followLoading) {\n        setFollowLoading(true);\n        let res = !isUnfollow ? await follow(profile.walletId, user.walletId) : await unfollow(profile.walletId, user.walletId);\n\n        if (res) {\n          setProfile(res);\n          getIsUserFollowingProfile();\n        }\n\n        setFollowLoading(false);\n      }\n    } catch (err) {\n      setFollowLoading(false);\n      console.error(err);\n    }\n  };\n\n  const getIsUserFollowingProfile = async () => {\n    try {\n      let res = await isUserFollowing(profile.walletId, user.walletId);\n\n      if (res) {\n        setIsUserFollowingProfile(res.isFollowing);\n      }\n    } catch (err) {\n      console.error(err);\n    }\n  };\n\n  useEffect(() => {\n    if (profile && user && profile.walletId && user.walletId) {\n      getIsUserFollowingProfile();\n    }\n  }, []);\n  return /*#__PURE__*/_jsx(\"div\", {\n    className: style.Infos,\n    children: /*#__PURE__*/_jsxs(\"div\", {\n      className: style.Container,\n      children: [/*#__PURE__*/_jsx(\"div\", {\n        className: style.AvatarShell,\n        children: /*#__PURE__*/_jsxs(\"div\", {\n          className: style.Avatar,\n          children: [profile.picture ? /*#__PURE__*/_jsx(\"img\", {\n            src: profile.picture,\n            draggable: \"false\",\n            className: style.AvatarIMG\n          }) : /*#__PURE__*/_jsx(\"div\", {\n            style: bgGradient,\n            className: style.AvatarIMG,\n            children: /*#__PURE__*/_jsx(\"div\", {\n              className: style.CreatorLetter,\n              children: profile.name.charAt(0)\n            })\n          }), profile.verified && /*#__PURE__*/_jsx(Badge, {\n            className: style.Badge\n          })]\n        })\n      }), /*#__PURE__*/_jsxs(\"div\", {\n        className: style.ContainerInner,\n        children: [/*#__PURE__*/_jsxs(\"div\", {\n          className: style.Left,\n          children: [/*#__PURE__*/_jsx(\"h1\", {\n            className: style.Name,\n            children: profile.name\n          }), profile.twitterName && /*#__PURE__*/_jsxs(\"a\", {\n            href: \"https://twitter.com/\" + profile.twitterName.substring(1),\n            target: \"_blank\",\n            className: style.Twitter,\n            children: [/*#__PURE__*/_jsx(Twitter, {\n              onClick: () => true,\n              className: style.TwitterSVG\n            }), \"@\", profile.twitterName]\n          }), /*#__PURE__*/_jsx(\"div\", {\n            className: style.Description,\n            children: profile.bio\n          })]\n        }), /*#__PURE__*/_jsxs(\"div\", {\n          className: style.Right,\n          children: [/*#__PURE__*/_jsxs(\"div\", {\n            className: style.Top,\n            children: [/*#__PURE__*/_jsxs(\"div\", {\n              className: style.Address,\n              onClick: () => {\n                navigator.clipboard.writeText(profile.walletId);\n              },\n              children: [middleEllipsis(profile.walletId, 20), /*#__PURE__*/_jsx(CopyPaste, {\n                className: style.CopyPaste\n              })]\n            }), (user === null || user === void 0 ? void 0 : user.walletId) && (profile === null || profile === void 0 ? void 0 : profile.walletId) && user.walletId !== profile.walletId && isUserFollowingProfile !== null && /*#__PURE__*/_jsx(\"div\", {\n              className: `${style.Button} ${followLoading ? style.ButtonDisabled : \"\"}`,\n              onClick: () => handleFollowUnfollow(isUserFollowingProfile),\n              children: !isUserFollowingProfile ? \"Follow\" : \"Unfollow\"\n            })]\n          }), /*#__PURE__*/_jsxs(\"div\", {\n            className: style.Bottom,\n            children: [/*#__PURE__*/_jsx(\"span\", {\n              className: style.Bold,\n              children: profile.nbFollowers\n            }), \"followers\", /*#__PURE__*/_jsx(\"span\", {\n              className: style.Separator,\n              children: \"\\xB7\"\n            }), /*#__PURE__*/_jsx(\"span\", {\n              className: style.Bold,\n              children: profile.nbFollowing\n            }), \"following\", /*#__PURE__*/_jsx(\"span\", {\n              className: style.Separator,\n              children: \"\\xB7\"\n            }), /*#__PURE__*/_jsx(\"span\", {\n              className: style.Bold,\n              children: profile.viewsCount\n            }), \"views\"]\n          })]\n        })]\n      })]\n    })\n  });\n};\n\nexport default Infos;","map":null,"metadata":{},"sourceType":"module"}