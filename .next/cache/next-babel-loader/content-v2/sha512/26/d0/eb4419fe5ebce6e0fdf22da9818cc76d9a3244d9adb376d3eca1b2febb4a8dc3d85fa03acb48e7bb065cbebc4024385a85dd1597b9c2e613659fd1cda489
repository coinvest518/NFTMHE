{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-runtime\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nimport _regeneratorRuntime from \"C:/Users/mildh/Desktop/nft/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"C:/Users/mildh/Desktop/nft/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport React, { useState, useEffect } from 'react';\nimport Head from 'next/head';\nimport AlphaBanner from 'components/base/AlphaBanner';\nimport MainHeader from 'components/base/MainHeader';\nimport ModalBuy from 'components/pages/NFT/ModalBuy';\nimport TernoaWallet from 'components/base/TernoaWallet';\nimport NFTPage from 'components/pages/NFT';\nimport ModalShowcase from 'components/pages/NFT/ModalShowcase';\nimport NotAvailableModal from 'components/base/NotAvailable';\nimport { getUser } from 'actions/user';\nimport { onModelClose, onModelOpen } from '../../utils/model-helpers';\nexport var __N_SSP = true;\n\nvar NftPage = function NftPage(_ref) {\n  var user = _ref.user,\n      NFT = _ref.NFT,\n      capsValue = _ref.capsValue;\n\n  var _useState = useState(false),\n      modalExpand = _useState[0],\n      setModalExpand = _useState[1];\n\n  var _useState2 = useState(0),\n      exp = _useState2[0],\n      setExp = _useState2[1];\n\n  var _useState3 = useState(false),\n      notAvailable = _useState3[0],\n      setNotAvailable = _useState3[1];\n\n  var _useState4 = useState(null),\n      type = _useState4[0],\n      setType = _useState4[1];\n\n  var _useState5 = useState(user),\n      walletUser = _useState5[0],\n      setWalletUser = _useState5[1];\n\n  useEffect(function () {\n    function callBack() {\n      return _callBack.apply(this, arguments);\n    }\n\n    function _callBack() {\n      _callBack = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n        var res;\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                _context.prev = 0;\n                _context.next = 3;\n                return getUser(window.walletId);\n\n              case 3:\n                res = _context.sent;\n                setWalletUser(res);\n                _context.next = 10;\n                break;\n\n              case 7:\n                _context.prev = 7;\n                _context.t0 = _context[\"catch\"](0);\n                console.error(_context.t0);\n\n              case 10:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, null, [[0, 7]]);\n      }));\n      return _callBack.apply(this, arguments);\n    }\n\n    if (window.isRNApp && window.walletId) callBack();\n  }, []);\n  useEffect(function () {\n    function callBack() {\n      return _callBack2.apply(this, arguments);\n    }\n\n    function _callBack2() {\n      _callBack2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2() {\n        var res;\n        return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                _context2.prev = 0;\n                _context2.next = 3;\n                return fetch(NFT.media.url, {\n                  method: 'HEAD'\n                });\n\n              case 3:\n                res = _context2.sent;\n                setType(res.headers.get('Content-Type'));\n                return _context2.abrupt(\"return\", res);\n\n              case 8:\n                _context2.prev = 8;\n                _context2.t0 = _context2[\"catch\"](0);\n                console.log('Error :', _context2.t0);\n\n              case 11:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2, null, [[0, 8]]);\n      }));\n      return _callBack2.apply(this, arguments);\n    }\n\n    callBack();\n  }, []);\n  useEffect(function () {\n    if (exp === 1 || exp === 2) {\n      // we are showing a modal;\n      onModelOpen();\n    } else {\n      onModelClose();\n    }\n  }, [exp]);\n  return /*#__PURE__*/_jsxs(_Fragment, {\n    children: [/*#__PURE__*/_jsxs(Head, {\n      children: [/*#__PURE__*/_jsxs(\"title\", {\n        children: [NFT.name, \" - SecretNFT\"]\n      }), /*#__PURE__*/_jsx(\"meta\", {\n        name: \"viewport\",\n        content: \"initial-scale=1.0, width=device-width\"\n      }), /*#__PURE__*/_jsx(\"meta\", {\n        name: \"description\",\n        content: NFT.description\n      }), /*#__PURE__*/_jsx(\"meta\", {\n        name: \"og:image\",\n        content: NFT.media.url\n      }), /*#__PURE__*/_jsx(\"meta\", {\n        property: \"og:image\",\n        content: NFT.media.url\n      })]\n    }), notAvailable && /*#__PURE__*/_jsx(NotAvailableModal, {\n      setNotAvailable: setNotAvailable\n    }), [1, 2].indexOf(exp) !== -1 && /*#__PURE__*/_jsx(ModalShowcase, {\n      NFT: NFT,\n      setExp: setExp,\n      exp: exp,\n      setModalExpand: function setModalExpand() {\n        return setExp(3);\n      },\n      type: type,\n      user: walletUser\n    }), exp === 3 && /*#__PURE__*/_jsx(ModalBuy, {\n      setModalExpand: function setModalExpand() {\n        return setExp(0);\n      },\n      id: NFT.id\n    }), modalExpand && /*#__PURE__*/_jsx(TernoaWallet, {\n      setModalExpand: setModalExpand\n    }), /*#__PURE__*/_jsx(AlphaBanner, {}), /*#__PURE__*/_jsx(MainHeader, {\n      user: walletUser,\n      setModalExpand: setModalExpand\n    }), /*#__PURE__*/_jsx(NFTPage, {\n      NFT: NFT,\n      setExp: setExp,\n      setModalExpand: setModalExpand,\n      setNotAvailable: setNotAvailable,\n      user: walletUser,\n      setUser: setWalletUser,\n      type: type,\n      capsValue: capsValue\n    })]\n  });\n};\n\nexport default NftPage;","map":null,"metadata":{},"sourceType":"module"}