{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-runtime\";\nimport _defineProperty from \"C:/Users/mildh/Desktop/nft/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport _regeneratorRuntime from \"C:/Users/mildh/Desktop/nft/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"C:/Users/mildh/Desktop/nft/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _objectWithoutProperties from \"C:/Users/mildh/Desktop/nft/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React, { useEffect, useState } from 'react';\nvar loader = '/loader.svg';\n\nvar timer = function timer(ms) {\n  return new Promise(function (res) {\n    return setTimeout(res, ms);\n  });\n};\n\nvar defaultFallback = \"\";\nvar totalRetries = 5;\n\nvar Media = function Media(_ref) {\n  var src = _ref.src,\n      type = _ref.type,\n      _ref$fallbackSrc = _ref.fallbackSrc,\n      fallbackSrc = _ref$fallbackSrc === void 0 ? defaultFallback : _ref$fallbackSrc,\n      rest = _objectWithoutProperties(_ref, [\"src\", \"type\", \"fallbackSrc\"]);\n\n  var _useState = useState(loader),\n      mediaSrc = _useState[0],\n      setMediaSrc = _useState[1];\n\n  var _useState2 = useState(null),\n      fetchStatusOk = _useState2[0],\n      setFetchStatusOk = _useState2[1];\n\n  var mediaType = type === null || type === void 0 ? void 0 : type.substr(0, 5);\n\n  var fetchRetry = /*#__PURE__*/function () {\n    var _ref2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(url) {\n      var retries,\n          delay,\n          res,\n          _args = arguments;\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              retries = _args.length > 1 && _args[1] !== undefined ? _args[1] : totalRetries;\n              delay = _args.length > 2 && _args[2] !== undefined ? _args[2] : 5000;\n              _context.next = 4;\n              return fetch(url)[\"catch\"](function () {});\n\n            case 4:\n              res = _context.sent;\n\n              if (!(res && res.status === 200)) {\n                _context.next = 7;\n                break;\n              }\n\n              return _context.abrupt(\"return\", res);\n\n            case 7:\n              // set image src to fallback on firt failed fetch\n              if (retries === totalRetries) setMediaSrc(fallbackSrc);\n\n              if (!(retries > 0)) {\n                _context.next = 17;\n                break;\n              }\n\n              console.log(\"Fetch retry triggered for url (\".concat(url, \") - retries remaining:\"), retries - 1);\n              _context.next = 12;\n              return timer(delay);\n\n            case 12:\n              _context.next = 14;\n              return fetchRetry(url, retries - 1);\n\n            case 14:\n              return _context.abrupt(\"return\", _context.sent);\n\n            case 17:\n              return _context.abrupt(\"return\", res);\n\n            case 18:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }));\n\n    return function fetchRetry(_x) {\n      return _ref2.apply(this, arguments);\n    };\n  }();\n\n  var checkSrcAvailable = /*#__PURE__*/function () {\n    var _ref3 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2() {\n      var res;\n      return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              _context2.prev = 0;\n              _context2.next = 3;\n              return fetchRetry(src);\n\n            case 3:\n              res = _context2.sent;\n              if (res) setFetchStatusOk(res.status === 200);\n              _context2.next = 10;\n              break;\n\n            case 7:\n              _context2.prev = 7;\n              _context2.t0 = _context2[\"catch\"](0);\n              console.log(_context2.t0);\n\n            case 10:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, _callee2, null, [[0, 7]]);\n    }));\n\n    return function checkSrcAvailable() {\n      return _ref3.apply(this, arguments);\n    };\n  }();\n\n  useEffect(function () {\n    checkSrcAvailable();\n  }, []);\n  useEffect(function () {\n    if (fetchStatusOk) setMediaSrc(src); // else if(fetchStatusOk !== null && fetchStatusOk===false)\n    //   setMediaSrc(fallbackSrc)\n  }, [fetchStatusOk]);\n  return /*#__PURE__*/_jsx(_Fragment, {\n    children: type !== null && mediaSrc !== fallbackSrc && ( //to remove when we have fb image\n    mediaSrc === fallbackSrc || mediaSrc === loader || mediaType === 'image') ? /*#__PURE__*/_jsx(\"img\", _objectSpread({\n      src: mediaSrc\n    }, rest)) : mediaType === 'video' && /*#__PURE__*/_jsx(\"video\", _objectSpread(_objectSpread({\n      playsInline: true,\n      autoPlay: true,\n      muted: true,\n      loop: true\n    }, rest), {}, {\n      children: /*#__PURE__*/_jsx(\"source\", {\n        id: \"outputVideo\",\n        src: mediaSrc,\n        type: \"video/mp4\"\n      })\n    }))\n  });\n};\n\nexport default Media;","map":null,"metadata":{},"sourceType":"module"}