{"ast":null,"code":"import { jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport _regeneratorRuntime from \"C:/Users/mildh/Desktop/nft/node_modules/@babel/runtime/regenerator\";\nimport _defineProperty from \"C:/Users/mildh/Desktop/nft/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _asyncToGenerator from \"C:/Users/mildh/Desktop/nft/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React, { useState } from 'react';\nimport Link from 'next/link';\nimport style from './NFT.module.scss';\nimport Footer from 'components/base/Footer';\nimport FloatingHeader from 'components/base/FloatingHeader';\nimport Media from 'components/base/Media';\nimport Scale from 'components/assets/scale';\nimport Share from 'components/assets/share';\nimport Like from 'components/assets/heart';\nimport Eye from 'components/assets/eye';\nimport Check from 'components/assets/check';\nimport gradient from 'random-gradient';\nimport { computeCaps, computeTiime } from 'utils/strings';\nimport { likeNFT, unlikeNFT } from 'actions/user';\nimport ModalShare from 'components/base/ModalShare';\n\nvar NFTPage = function NFTPage(_ref) {\n  var _window$location, _user$likedNFTs2;\n\n  var setExp = _ref.setExp,\n      NFT = _ref.NFT,\n      setModalExpand = _ref.setModalExpand,\n      setNotAvailable = _ref.setNotAvailable,\n      user = _ref.user,\n      setUser = _ref.setUser,\n      type = _ref.type,\n      capsValue = _ref.capsValue;\n\n  var _useState = useState(false),\n      likeLoading = _useState[0],\n      setLikeLoading = _useState[1];\n\n  var _useState2 = useState(false),\n      modalShareOpen = _useState2[0],\n      setModalShareOpen = _useState2[1];\n\n  var bgGradientOwner = {\n    background: gradient(NFT.ownerData.name)\n  };\n  var bgGradientCreator = {\n    background: gradient(NFT.creatorData.name)\n  };\n  var fiatPrice = Number(NFT.price) / 1000000000000000000 * capsValue;\n  var userCanBuyCaps = user ? user.capsAmount && NFT.price && NFT.price !== \"\" && Number(user.capsAmount) >= Number(NFT.price) : true;\n  var userCanBuyTiime = user ? user.tiimeAmount && NFT.priceTiime && NFT.priceTiime !== \"\" && Number(user.tiimeAmount) >= Number(NFT.priceTiime) : true;\n  var userCanBuy = userCanBuyCaps || userCanBuyTiime;\n  var shareSubject = \"Check out this Secret NFT\";\n  var shareText = \"Check out \".concat(NFT.name ? NFT.name : \"this nft\", \" on secret-nft.com\");\n  var shareUrl = true && ((_window$location = window.location) === null || _window$location === void 0 ? void 0 : _window$location.href) || \"https://www.secret-nft.com/nft/\".concat(NFT.id);\n\n  var handleLikeDislike = /*#__PURE__*/function () {\n    var _ref2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n      var res, _user$likedNFTs;\n\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.prev = 0;\n              res = null;\n\n              if (!(!likeLoading && user)) {\n                _context.next = 13;\n                break;\n              }\n\n              setLikeLoading(true);\n\n              if (user !== null && user !== void 0 && (_user$likedNFTs = user.likedNFTs) !== null && _user$likedNFTs !== void 0 && _user$likedNFTs.includes(NFT.id)) {\n                _context.next = 10;\n                break;\n              }\n\n              _context.next = 7;\n              return likeNFT(user.walletId, NFT.id);\n\n            case 7:\n              res = _context.sent;\n              _context.next = 13;\n              break;\n\n            case 10:\n              _context.next = 12;\n              return unlikeNFT(user.walletId, NFT.id);\n\n            case 12:\n              res = _context.sent;\n\n            case 13:\n              if (res !== null) setUser(_objectSpread(_objectSpread({}, user), res));\n              setLikeLoading(false);\n              _context.next = 20;\n              break;\n\n            case 17:\n              _context.prev = 17;\n              _context.t0 = _context[\"catch\"](0);\n              console.error(_context.t0);\n\n            case 20:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee, null, [[0, 17]]);\n    }));\n\n    return function handleLikeDislike() {\n      return _ref2.apply(this, arguments);\n    };\n  }();\n\n  var handleShare = /*#__PURE__*/function () {\n    var _ref3 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2() {\n      return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              try {\n                // TODO : Make share with native\n                // if (window && window.isRNApp && navigator){\n                //   await navigator.share({\n                //     title: shareSubject,\n                //     text: shareText,\n                //     url: shareUrl\n                //   })\n                // }else{\n                //   setModalShareOpen(true)\n                // }\n                setModalShareOpen(true);\n              } catch (err) {\n                console.error(err);\n              }\n\n            case 1:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, _callee2);\n    }));\n\n    return function handleShare() {\n      return _ref3.apply(this, arguments);\n    };\n  }();\n\n  return /*#__PURE__*/_jsxs(\"div\", {\n    className: style.Container,\n    children: [/*#__PURE__*/_jsxs(\"div\", {\n      className: style.Wrapper,\n      children: [/*#__PURE__*/_jsxs(\"div\", {\n        className: style.NFT,\n        children: [/*#__PURE__*/_jsx(Media, {\n          src: NFT.media.url,\n          type: type,\n          alt: \"imgnft\",\n          draggable: \"false\",\n          className: style.NFTIMG\n        }), /*#__PURE__*/_jsx(\"div\", {\n          onClick: function onClick() {\n            return setExp(1);\n          },\n          className: style.Scale,\n          children: /*#__PURE__*/_jsx(Scale, {\n            className: style.ScaleSVG\n          })\n        })]\n      }), /*#__PURE__*/_jsxs(\"div\", {\n        className: style.Text,\n        children: [/*#__PURE__*/_jsxs(\"div\", {\n          className: style.Top,\n          children: [/*#__PURE__*/_jsx(\"h1\", {\n            className: style.Title,\n            children: NFT.name\n          }), /*#__PURE__*/_jsxs(\"div\", {\n            className: style.TopInfos,\n            children: [/*#__PURE__*/_jsxs(\"div\", {\n              className: style.Views,\n              children: [/*#__PURE__*/_jsx(Eye, {\n                className: style.EyeSVG\n              }), NFT.viewsCount]\n            }), /*#__PURE__*/_jsx(\"div\", {\n              className: \"\".concat(style.Like, \" \").concat(user !== null && user !== void 0 && (_user$likedNFTs2 = user.likedNFTs) !== null && _user$likedNFTs2 !== void 0 && _user$likedNFTs2.includes(NFT.id) ? style.Liked : \"\", \" \").concat(likeLoading || !user ? style.DisabledLike : \"\"),\n              onClick: function onClick() {\n                return handleLikeDislike();\n              },\n              children: /*#__PURE__*/_jsx(Like, {\n                className: style.LikeSVG\n              })\n            }), /*#__PURE__*/_jsx(\"div\", {\n              className: style.Share,\n              onClick: function onClick() {\n                return handleShare();\n              },\n              children: /*#__PURE__*/_jsx(Share, {\n                className: style.ShareSVG\n              })\n            })]\n          })]\n        }), /*#__PURE__*/_jsx(\"div\", {\n          className: style.Line\n        }), /*#__PURE__*/_jsx(\"div\", {\n          className: style.Hide,\n          children: /*#__PURE__*/_jsx(\"div\", {\n            className: style.Tags,\n            children: /*#__PURE__*/_jsxs(\"div\", {\n              className: style.Tag,\n              children: [/*#__PURE__*/_jsx(\"span\", {\n                role: \"img\",\n                className: style.Emoji,\n                \"aria-label\": \"art\",\n                children: \"\\uD83C\\uDFA8\"\n              }), \"Design\"]\n            })\n          })\n        }), /*#__PURE__*/_jsx(\"p\", {\n          className: style.Description,\n          children: NFT.description\n        }), /*#__PURE__*/_jsxs(\"div\", {\n          className: style.Buy,\n          children: [/*#__PURE__*/_jsxs(\"div\", {\n            className: style.BuyLeft,\n            children: [/*#__PURE__*/_jsxs(\"div\", {\n              className: style.QuantityLabel,\n              children: [\"Available : \", /*#__PURE__*/_jsx(\"span\", {\n                className: style.QuantityCount,\n                children: typeof NFT.totalListedNft !== 'undefined' ? NFT.totalListedNft : 1\n              })]\n            }), /*#__PURE__*/_jsx(\"div\", {\n              onClick: function onClick() {\n                return NFT.listed && userCanBuy && setExp(2);\n              },\n              className: NFT.listed && userCanBuy ? style.Button : \"\".concat(style.Button, \" \").concat(style.Disabled),\n              children: \"Buy\"\n            })]\n          }), NFT.listed === 1 && /*#__PURE__*/_jsxs(\"div\", {\n            className: style.BuyRight,\n            children: [/*#__PURE__*/_jsxs(\"div\", {\n              className: style.Price,\n              children: [NFT.price && Number(NFT.price) > 0 && \"\".concat(computeCaps(Number(NFT.price)), \" CAPS\"), NFT.price && Number(NFT.price) > 0 && NFT.priceTiime && Number(NFT.priceTiime) && \" / \", NFT.priceTiime && Number(NFT.priceTiime) > 0 && \"\".concat(computeTiime(Number(NFT.priceTiime)), \" TIIME\")]\n            }), fiatPrice > 0 && /*#__PURE__*/_jsxs(\"span\", {\n              className: style.FiatPrice,\n              children: [fiatPrice.toFixed(4), \"$\"]\n            })]\n          })]\n        }), /*#__PURE__*/_jsxs(\"div\", {\n          className: style.HistoryTop,\n          children: [/*#__PURE__*/_jsx(\"div\", {\n            className: style.HistoryTitle,\n            children: \"History\"\n          }), /*#__PURE__*/_jsx(\"div\", {\n            className: style.HistoryLine\n          })]\n        }), /*#__PURE__*/_jsxs(\"div\", {\n          className: style.History,\n          children: [/*#__PURE__*/_jsx(Link, {\n            href: \"/\".concat(NFT.ownerData.walletId),\n            children: /*#__PURE__*/_jsxs(\"a\", {\n              className: style.HistoryItem,\n              children: [/*#__PURE__*/_jsx(Check, {\n                className: style.Check\n              }), /*#__PURE__*/_jsx(\"div\", {\n                className: style.HistoryAvatar,\n                children: NFT.ownerData.picture ? /*#__PURE__*/_jsx(\"img\", {\n                  src: NFT.ownerData.picture,\n                  className: style.HistoryIMG\n                }) : /*#__PURE__*/_jsx(\"div\", {\n                  className: style.HistoryIMG,\n                  style: bgGradientOwner\n                })\n              }), /*#__PURE__*/_jsxs(\"div\", {\n                className: style.HistoryUser,\n                children: [/*#__PURE__*/_jsx(\"div\", {\n                  className: style.HistoryRole,\n                  children: \"Owner\"\n                }), /*#__PURE__*/_jsx(\"div\", {\n                  className: style.HistoryName,\n                  children: NFT.ownerData.name\n                })]\n              })]\n            })\n          }), /*#__PURE__*/_jsx(Link, {\n            href: \"/\".concat(NFT.creatorData.walletId),\n            children: /*#__PURE__*/_jsxs(\"a\", {\n              className: style.HistoryItem,\n              children: [/*#__PURE__*/_jsx(Check, {\n                className: style.Check\n              }), /*#__PURE__*/_jsx(\"div\", {\n                className: style.HistoryAvatar,\n                children: NFT.creatorData.picture ? /*#__PURE__*/_jsx(\"img\", {\n                  src: NFT.creatorData.picture,\n                  className: style.HistoryIMG\n                }) : /*#__PURE__*/_jsx(\"div\", {\n                  className: style.HistoryIMG,\n                  style: bgGradientCreator\n                })\n              }), /*#__PURE__*/_jsxs(\"div\", {\n                className: style.HistoryUser,\n                children: [/*#__PURE__*/_jsx(\"div\", {\n                  className: style.HistoryRole,\n                  children: \"Creator\"\n                }), /*#__PURE__*/_jsx(\"div\", {\n                  className: style.HistoryName,\n                  children: NFT.creatorData.name\n                })]\n              })]\n            })\n          })]\n        })]\n      })]\n    }), /*#__PURE__*/_jsx(Footer, {\n      setNotAvailable: setNotAvailable\n    }), /*#__PURE__*/_jsx(FloatingHeader, {\n      user: user,\n      setModalExpand: setModalExpand\n    }), modalShareOpen && /*#__PURE__*/_jsx(ModalShare, {\n      setModalExpand: setModalShareOpen,\n      title: \"Share this NFT with your friends\",\n      subject: shareSubject,\n      text: shareText,\n      url: shareUrl\n    })]\n  });\n};\n\nexport default NFTPage;","map":null,"metadata":{},"sourceType":"module"}