{"ast":null,"code":"import { jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport _defineProperty from \"C:/Users/mildh/Desktop/nft/node_modules/@babel/runtime/helpers/esm/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React, { useState, useEffect } from 'react';\nimport Link from 'next/link';\nimport style from './Create.module.scss';\nimport Footer from 'components/base/Footer';\nimport FloatingHeader from 'components/base/FloatingHeader';\nimport ArrowBottom from 'components/assets/arrowBottom';\nimport Upload from 'components/assets/upload';\nimport WhiteWaterMark from 'components/assets/WhiteWaterMark';\nimport Eye from 'components/assets/eye';\n\nvar Create = function Create(_ref) {\n  var setModalExpand = _ref.setModalExpand,\n      setNotAvailable = _ref.setNotAvailable,\n      setModalCreate = _ref.setModalCreate,\n      NFT = _ref.NFT,\n      setNFT = _ref.setNFT,\n      secretNFT = _ref.secretNFT,\n      setSecretNFT = _ref.setSecretNFT,\n      initalValue = _ref.NFTData,\n      setNftDataToParent = _ref.setNFTData,\n      user = _ref.user,\n      select = _ref.select,\n      setSelect = _ref.setSelect,\n      processFile = _ref.processFile,\n      setError = _ref.setError,\n      setProcessed = _ref.setProcessed;\n\n  var _useState = useState(false),\n      exp = _useState[0],\n      setExp = _useState[1];\n\n  var _useState2 = useState(false),\n      isRN = _useState2[0],\n      setIsRN = _useState2[1];\n\n  var _useState3 = useState({}),\n      nftData = _useState3[0],\n      setNFTData = _useState3[1];\n\n  var name = nftData.name,\n      description = nftData.description,\n      quantity = nftData.quantity;\n  useEffect(function () {\n    setIsRN(window.isRNApp);\n    setNFTData(initalValue);\n  });\n\n  var validateQuantity = function validateQuantity(value, limit) {\n    return value && value > 0 && value <= limit;\n  };\n\n  var isDataValid = name && description && validateQuantity(quantity, 10) && select !== 'Select NFT Option';\n\n  function onChange(e) {\n    var nextNftData = _objectSpread(_objectSpread({}, nftData), {}, _defineProperty({}, e.target.name, e.target.value));\n\n    setNFTData(nextNftData);\n    setNftDataToParent(nextNftData);\n  }\n\n  function returnType(NFTarg) {\n    if (NFTarg.type.substr(0, 5) === 'image') return /*#__PURE__*/_jsx(\"img\", {\n      className: style.IMGBackground,\n      src: URL.createObjectURL(NFTarg),\n      alt: \"img\",\n      id: \"output\"\n    });else if (NFTarg.type.substr(0, 5) === 'video') return /*#__PURE__*/_jsx(\"video\", {\n      autoPlay: true,\n      muted: true,\n      playsInline: true,\n      loop: true,\n      className: style.IMGBackground,\n      children: /*#__PURE__*/_jsx(\"source\", {\n        id: \"outputVideo\",\n        src: URL.createObjectURL(NFTarg),\n        type: \"video/mp4\"\n      })\n    });\n  }\n\n  function uploadFiles() {\n    if (!name || !description || !quantity || quantity > 10 || select === 'Select NFT Option') {\n      setError('Please fill the form entirely.');\n      setModalCreate(true);\n      return false;\n    }\n\n    if (secretNFT.type.substr(0, 5) === 'image' && select !== 'None' && select !== 'Secret') {\n      processFile();\n    } else {\n      setProcessed(true);\n    }\n\n    setModalCreate(true);\n  }\n\n  function checkType() {\n    if (secretNFT.type.substr(0, 5) === 'video' || secretNFT.type === 'image/gif') return false;else return true;\n  }\n\n  return /*#__PURE__*/_jsxs(\"div\", {\n    className: style.Container,\n    children: [/*#__PURE__*/_jsxs(\"div\", {\n      className: style.Wrapper,\n      children: [/*#__PURE__*/_jsx(\"div\", {\n        className: style.Label,\n        children: \"Coming Soon\"\n      }), /*#__PURE__*/_jsx(\"h2\", {\n        className: style.Title,\n        children: \"Create NFT\"\n      }), /*#__PURE__*/_jsxs(\"div\", {\n        className: style.InnerContainer,\n        children: [/*#__PURE__*/_jsx(\"div\", {\n          className: style.Top,\n          children: /*#__PURE__*/_jsxs(\"span\", {\n            className: style.TopInf,\n            children: [/*#__PURE__*/_jsx(Eye, {\n              className: style.EyeSVG\n            }), \"NFT Preview\"]\n          })\n        }), /*#__PURE__*/_jsxs(\"div\", {\n          className: style.Data,\n          children: [/*#__PURE__*/_jsx(\"div\", {\n            className: style.Left,\n            children: /*#__PURE__*/_jsxs(\"label\", {\n              htmlFor: \"uploadNFT\",\n              className: secretNFT ? style.NFTPreview : \"\".concat(style.NFTPreview, \" \").concat(style.NFTPreviewBorder),\n              children: [/*#__PURE__*/_jsxs(\"div\", {\n                className: secretNFT ? style.Hidden : style.NFTNull,\n                children: [/*#__PURE__*/_jsx(Upload, {\n                  className: style.UploadSVG\n                }), /*#__PURE__*/_jsx(\"div\", {\n                  className: style.InsightMedium,\n                  children: \"Click here to upload your file.\"\n                }), /*#__PURE__*/_jsx(\"div\", {\n                  className: style.InsightLight,\n                  children: \"JPEG, JPG, PNG, GIF, or MP4. Max 30mb.\"\n                })]\n              }), secretNFT && returnType(secretNFT), /*#__PURE__*/_jsx(\"div\", {\n                className: style.HiddenShell,\n                children: /*#__PURE__*/_jsx(\"input\", {\n                  type: \"file\",\n                  id: \"uploadNFT\",\n                  onChange: function onChange(event) {\n                    var target = event.target;\n                    if (target && target.files) setSecretNFT(target.files[0]);\n                  },\n                  className: style.HiddenInput,\n                  accept: \".jpg, .jpeg, .png, .gif, .mp4\"\n                })\n              }), select === 'Blur' && secretNFT && /*#__PURE__*/_jsx(\"div\", {\n                className: style.Blur\n              }), select === 'Protect' && secretNFT && /*#__PURE__*/_jsx(\"div\", {\n                className: style.OPTN,\n                children: /*#__PURE__*/_jsx(\"div\", {\n                  className: style.OPTNCTNR,\n                  children: /*#__PURE__*/_jsx(WhiteWaterMark, {\n                    className: style.WaterMarkSVG\n                  })\n                })\n              }), select === 'Secret' && /*#__PURE__*/_jsxs(\"label\", {\n                htmlFor: \"uploadSecretNFT\",\n                className: NFT ? style.NFTSPreview : \"\".concat(style.NFTSPreview, \" \").concat(style.NFTPreviewBorder),\n                children: [/*#__PURE__*/_jsxs(\"div\", {\n                  className: NFT ? style.Hidden : style.NFTSNull,\n                  children: [/*#__PURE__*/_jsx(\"div\", {\n                    className: style.Label,\n                    children: \"Coming soon\"\n                  }), /*#__PURE__*/_jsx(Upload, {\n                    className: style.UploadSVG2\n                  }), /*#__PURE__*/_jsx(\"div\", {\n                    className: style.NFTSTips,\n                    children: \"Click to select your file that will hide your NFT for the surprise.\"\n                  }), /*#__PURE__*/_jsx(\"div\", {\n                    className: style.NFTSTips2,\n                    children: \"Once purchased, the owner will be able to see your NFT\"\n                  })]\n                }), NFT && returnType(NFT), /*#__PURE__*/_jsx(\"div\", {\n                  className: style.HiddenShell,\n                  children: /*#__PURE__*/_jsx(\"input\", {\n                    type: \"file\",\n                    id: \"uploadSecretNFT\",\n                    onChange: function onChange(event) {\n                      var target = event.target;\n                      if (target && target.files) setNFT(target.files[0]);\n                    },\n                    className: style.HiddenInput,\n                    accept: \".jpg, .jpeg, .png, .gif, .mp4\"\n                  })\n                })]\n              })]\n            })\n          }), /*#__PURE__*/_jsxs(\"div\", {\n            className: style.Right,\n            children: [/*#__PURE__*/_jsxs(\"div\", {\n              className: style.InputShell,\n              children: [/*#__PURE__*/_jsx(\"h4\", {\n                className: style.Subtitle,\n                children: \"Name\"\n              }), /*#__PURE__*/_jsx(\"input\", {\n                type: \"text\",\n                placeholder: \"Ternoa collection\",\n                onChange: onChange,\n                name: \"name\",\n                value: name,\n                className: style.Input\n              })]\n            }), /*#__PURE__*/_jsxs(\"div\", {\n              className: style.InputShell,\n              children: [/*#__PURE__*/_jsx(\"h4\", {\n                className: style.Subtitle,\n                children: \"Description\"\n              }), /*#__PURE__*/_jsx(\"textarea\", {\n                placeholder: \"A cool description\",\n                name: \"description\",\n                value: description,\n                onChange: onChange,\n                className: style.Textarea\n              })]\n            }), /*#__PURE__*/_jsxs(\"div\", {\n              className: style.InputShell,\n              children: [/*#__PURE__*/_jsxs(\"h4\", {\n                className: style.Subtitle,\n                children: [\"Quantity \", /*#__PURE__*/_jsx(\"span\", {\n                  className: style.Insight,\n                  children: \"(max: 10)\"\n                })]\n              }), /*#__PURE__*/_jsx(\"input\", {\n                type: \"text\",\n                name: \"quantity\",\n                value: quantity,\n                onChange: onChange,\n                placeholder: \"1\",\n                className: \"\".concat(style.Input, \" \").concat(quantity && !validateQuantity(quantity, 10) ? style.InputError : \"\")\n              })]\n            }), /*#__PURE__*/_jsxs(\"div\", {\n              className: style.SelectShell,\n              children: [/*#__PURE__*/_jsxs(\"div\", {\n                className: style.SelectContainer,\n                children: [/*#__PURE__*/_jsxs(\"div\", {\n                  className: secretNFT ? style.Select : style.SelectDisabled,\n                  onClick: function onClick() {\n                    secretNFT ? setExp(!exp) : false;\n                  },\n                  children: [select, /*#__PURE__*/_jsx(ArrowBottom, {\n                    className: exp ? style.arrowbtmselect : style.arrowbtm\n                  })]\n                }), exp && /*#__PURE__*/_jsxs(\"div\", {\n                  className: style.SelectOptn,\n                  children: [checkType() && /*#__PURE__*/_jsx(\"div\", {\n                    className: style.SelectItem,\n                    onClick: function onClick() {\n                      setSelect('Protect');\n                      setExp(false);\n                    },\n                    children: \"Protect\"\n                  }), /*#__PURE__*/_jsx(\"div\", {\n                    className: style.SelectItem,\n                    onClick: function onClick() {\n                      setSelect('Secret');\n                      setExp(false);\n                    },\n                    children: \"Secret\"\n                  }), checkType() && /*#__PURE__*/_jsx(\"div\", {\n                    className: style.SelectItem,\n                    onClick: function onClick() {\n                      setSelect('Blur');\n                      setExp(false);\n                    },\n                    children: \"Blur\"\n                  }), /*#__PURE__*/_jsx(\"div\", {\n                    className: style.SelectItem,\n                    onClick: function onClick() {\n                      setSelect('None');\n                      setExp(false);\n                    },\n                    children: \"None\"\n                  })]\n                })]\n              }), /*#__PURE__*/_jsx(Link, {\n                href: \"/faq\",\n                children: /*#__PURE__*/_jsx(\"a\", {\n                  className: style.Link,\n                  children: \"How it works\"\n                })\n              })]\n            })]\n          })]\n        }), !isRN && /*#__PURE__*/_jsx(\"div\", {\n          className: \"\".concat(style.Create, \" \").concat(!isDataValid ? style.CreateDisabled : \"\"),\n          onClick: function onClick() {\n            return isDataValid && uploadFiles();\n          },\n          children: \"Create NFT\"\n        })]\n      })]\n    }), /*#__PURE__*/_jsx(Footer, {\n      setNotAvailable: setNotAvailable\n    }), /*#__PURE__*/_jsx(FloatingHeader, {\n      user: user,\n      setModalExpand: setModalExpand\n    })]\n  });\n};\n\nexport default Create;","map":null,"metadata":{},"sourceType":"module"}