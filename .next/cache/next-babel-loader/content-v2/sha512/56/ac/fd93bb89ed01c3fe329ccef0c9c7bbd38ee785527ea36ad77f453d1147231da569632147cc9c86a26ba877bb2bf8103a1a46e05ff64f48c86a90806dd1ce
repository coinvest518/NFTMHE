{"ast":null,"code":"import _regeneratorRuntime from \"C:/Users/mildh/Desktop/nft/node_modules/@babel/runtime/regenerator\";\nimport _defineProperty from \"C:/Users/mildh/Desktop/nft/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _asyncToGenerator from \"C:/Users/mildh/Desktop/nft/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport { filterNFTs } from \"./nft\";\nexport var getUser = /*#__PURE__*/function () {\n  var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(token) {\n    var res, userData, capsResponse, capsData;\n    return _regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.next = 2;\n            return fetch(\"\".concat(process.env.NEXT_PUBLIC_NODE_API, \"/api/mp/users/\").concat(token));\n\n          case 2:\n            res = _context.sent;\n\n            if (res.ok) {\n              _context.next = 5;\n              break;\n            }\n\n            throw new Error();\n\n          case 5:\n            _context.next = 7;\n            return res.json();\n\n          case 7:\n            userData = _context.sent;\n            _context.next = 10;\n            return fetch(\"\".concat(process.env.NEXT_PUBLIC_NODE_API, \"/api/mp/users/\").concat(token, \"/caps\"));\n\n          case 10:\n            capsResponse = _context.sent;\n            capsData = null;\n\n            if (!capsResponse.ok) {\n              _context.next = 16;\n              break;\n            }\n\n            _context.next = 15;\n            return capsResponse.json();\n\n          case 15:\n            capsData = _context.sent;\n\n          case 16:\n            return _context.abrupt(\"return\", _objectSpread(_objectSpread({}, userData), capsData));\n\n          case 17:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee);\n  }));\n\n  return function getUser(_x) {\n    return _ref.apply(this, arguments);\n  };\n}();\nexport var getProfile = /*#__PURE__*/function () {\n  var _ref2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2(id, walletId) {\n    var res;\n    return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            _context2.next = 2;\n            return fetch(\"\".concat(process.env.NEXT_PUBLIC_NODE_API, \"/api/mp/users/\").concat(id, \"?incViews=\", true, \"&walletIdViewer=\").concat(walletId));\n\n          case 2:\n            res = _context2.sent;\n\n            if (res.ok) {\n              _context2.next = 5;\n              break;\n            }\n\n            throw new Error();\n\n          case 5:\n            _context2.next = 7;\n            return res.json();\n\n          case 7:\n            return _context2.abrupt(\"return\", _context2.sent);\n\n          case 8:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    }, _callee2);\n  }));\n\n  return function getProfile(_x2, _x3) {\n    return _ref2.apply(this, arguments);\n  };\n}();\nexport var getAccountBalance = /*#__PURE__*/function () {\n  var _ref3 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee3(id) {\n    var res, data;\n    return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n      while (1) {\n        switch (_context3.prev = _context3.next) {\n          case 0:\n            _context3.next = 2;\n            return fetch(\"\".concat(process.env.NEXT_PUBLIC_NODE_API, \"/api/mp/users/\").concat(id, \"/caps\"));\n\n          case 2:\n            res = _context3.sent;\n\n            if (res.ok) {\n              _context3.next = 5;\n              break;\n            }\n\n            throw new Error();\n\n          case 5:\n            _context3.next = 7;\n            return res.json();\n\n          case 7:\n            data = _context3.sent;\n            return _context3.abrupt(\"return\", data.capsAmout);\n\n          case 9:\n          case \"end\":\n            return _context3.stop();\n        }\n      }\n    }, _callee3);\n  }));\n\n  return function getAccountBalance(_x4) {\n    return _ref3.apply(this, arguments);\n  };\n}();\nexport var getUsers = /*#__PURE__*/function () {\n  var _ref4 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee4() {\n    var res, data;\n    return _regeneratorRuntime.wrap(function _callee4$(_context4) {\n      while (1) {\n        switch (_context4.prev = _context4.next) {\n          case 0:\n            _context4.next = 2;\n            return fetch(\"\".concat(process.env.NEXT_PUBLIC_NODE_API, \"/api/mp/users\"));\n\n          case 2:\n            res = _context4.sent;\n\n            if (res.ok) {\n              _context4.next = 5;\n              break;\n            }\n\n            throw new Error();\n\n          case 5:\n            _context4.next = 7;\n            return res.json();\n\n          case 7:\n            data = _context4.sent;\n            return _context4.abrupt(\"return\", data.docs);\n\n          case 9:\n          case \"end\":\n            return _context4.stop();\n        }\n      }\n    }, _callee4);\n  }));\n\n  return function getUsers() {\n    return _ref4.apply(this, arguments);\n  };\n}();\nexport var reviewRequested = /*#__PURE__*/function () {\n  var _ref5 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee5(walletId) {\n    var res, userData;\n    return _regeneratorRuntime.wrap(function _callee5$(_context5) {\n      while (1) {\n        switch (_context5.prev = _context5.next) {\n          case 0:\n            _context5.next = 2;\n            return fetch(\"\".concat(process.env.NEXT_PUBLIC_NODE_API, \"/api/mp/users/reviewRequested/\").concat(walletId), {\n              method: 'PATCH'\n            });\n\n          case 2:\n            res = _context5.sent;\n\n            if (res.ok) {\n              _context5.next = 5;\n              break;\n            }\n\n            throw new Error();\n\n          case 5:\n            _context5.next = 7;\n            return res.json();\n\n          case 7:\n            userData = _context5.sent;\n            return _context5.abrupt(\"return\", userData);\n\n          case 9:\n          case \"end\":\n            return _context5.stop();\n        }\n      }\n    }, _callee5);\n  }));\n\n  return function reviewRequested(_x5) {\n    return _ref5.apply(this, arguments);\n  };\n}();\nexport var likeNFT = /*#__PURE__*/function () {\n  var _ref6 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee6(walletId, nftId) {\n    var res, user;\n    return _regeneratorRuntime.wrap(function _callee6$(_context6) {\n      while (1) {\n        switch (_context6.prev = _context6.next) {\n          case 0:\n            _context6.next = 2;\n            return fetch(\"\".concat(process.env.NEXT_PUBLIC_NODE_API, \"/api/mp/users/like/?walletId=\").concat(walletId, \"&nftId=\").concat(nftId), {\n              method: 'POST'\n            });\n\n          case 2:\n            res = _context6.sent;\n\n            if (res.ok) {\n              _context6.next = 5;\n              break;\n            }\n\n            throw new Error();\n\n          case 5:\n            _context6.next = 7;\n            return res.json();\n\n          case 7:\n            user = _context6.sent;\n            return _context6.abrupt(\"return\", user);\n\n          case 9:\n          case \"end\":\n            return _context6.stop();\n        }\n      }\n    }, _callee6);\n  }));\n\n  return function likeNFT(_x6, _x7) {\n    return _ref6.apply(this, arguments);\n  };\n}();\nexport var unlikeNFT = /*#__PURE__*/function () {\n  var _ref7 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee7(walletId, nftId) {\n    var res, user;\n    return _regeneratorRuntime.wrap(function _callee7$(_context7) {\n      while (1) {\n        switch (_context7.prev = _context7.next) {\n          case 0:\n            _context7.next = 2;\n            return fetch(\"\".concat(process.env.NEXT_PUBLIC_NODE_API, \"/api/mp/users/unlike/?walletId=\").concat(walletId, \"&nftId=\").concat(nftId), {\n              method: 'POST'\n            });\n\n          case 2:\n            res = _context7.sent;\n\n            if (res.ok) {\n              _context7.next = 5;\n              break;\n            }\n\n            throw new Error();\n\n          case 5:\n            _context7.next = 7;\n            return res.json();\n\n          case 7:\n            user = _context7.sent;\n            return _context7.abrupt(\"return\", user);\n\n          case 9:\n          case \"end\":\n            return _context7.stop();\n        }\n      }\n    }, _callee7);\n  }));\n\n  return function unlikeNFT(_x8, _x9) {\n    return _ref7.apply(this, arguments);\n  };\n}();\nexport var getLikedNFTs = /*#__PURE__*/function () {\n  var _ref8 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee8(walletId) {\n    var res, nfts;\n    return _regeneratorRuntime.wrap(function _callee8$(_context8) {\n      while (1) {\n        switch (_context8.prev = _context8.next) {\n          case 0:\n            _context8.next = 2;\n            return fetch(\"\".concat(process.env.NEXT_PUBLIC_NODE_API, \"/api/mp/users/\").concat(walletId, \"/liked\"));\n\n          case 2:\n            res = _context8.sent;\n\n            if (res.ok) {\n              _context8.next = 5;\n              break;\n            }\n\n            throw new Error();\n\n          case 5:\n            _context8.next = 7;\n            return res.json();\n\n          case 7:\n            nfts = _context8.sent;\n            return _context8.abrupt(\"return\", filterNFTs(nfts));\n\n          case 9:\n          case \"end\":\n            return _context8.stop();\n        }\n      }\n    }, _callee8);\n  }));\n\n  return function getLikedNFTs(_x10) {\n    return _ref8.apply(this, arguments);\n  };\n}();","map":null,"metadata":{},"sourceType":"module"}