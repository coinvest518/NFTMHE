{"ast":null,"code":"import { jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-runtime\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\n\n/* eslint-disable jsx-a11y/no-static-element-interactions */\nimport React, { useEffect, useState } from 'react';\nimport style from './ModalBuy.module.scss';\nimport Close from 'components/assets/close';\nimport QRCode from 'components/base/QRCode';\nimport randomstring from 'randomstring';\nimport { connect as connectIo } from 'utils/socket/socket.helper';\nimport Link from 'next/link';\nimport CheckMark from 'components/assets/checkmark';\n\nconst ModalBuy = ({\n  setModalExpand,\n  id\n}) => {\n  const {\n    0: session\n  } = useState(randomstring.generate());\n  const {\n    0: error,\n    1: setError\n  } = useState('');\n  const {\n    0: showQR,\n    1: setShowQR\n  } = useState(false);\n  const {\n    0: success,\n    1: setSuccess\n  } = useState(false);\n  const {\n    0: isRN,\n    1: setIsRN\n  } = useState(false);\n  const {\n    0: loading,\n    1: setLoading\n  } = useState(false);\n  useEffect(() => {\n    setIsRN(window.isRNApp);\n    console.log('socket connect on session', session);\n    const socket = connectIo(`/socket/buyNft`, {\n      session\n    });\n    socket.on('connect_error', e => {\n      console.error('connection error socket', e);\n      setModalExpand(false);\n    });\n    socket.on('CONNECTION_SUCCESS', () => {\n      if (window.isRNApp) {\n        const data = {\n          session,\n          nft_id: id\n        };\n        setLoading(true);\n        setTimeout(function () {\n          window.ReactNativeWebView.postMessage(JSON.stringify({\n            action: 'BUY',\n            data\n          }));\n        }, 2000);\n      } else {\n        setShowQR(true);\n      }\n    });\n    socket.on('CONNECTION_FAILURE', data => setError(data.msg));\n    socket.on('NFT_BUY', data => {\n      setLoading(false);\n      console.log('NFT_BUY:' + data.success);\n      if (data.success) setSuccess(true);else {\n        setError('Something went wrong. Please try again.');\n      }\n      socket.emit('NFT_BUY_RECEIVED');\n      socket.close();\n      setTimeout(() => {\n        setModalExpand(false);\n      }, 2000);\n    });\n    socket.on('disconnect', () => {\n      setModalExpand(false);\n    });\n    return function cleanup() {\n      socket.close();\n    };\n  }, []);\n\n  function manageTransaction() {\n    if (success) {\n      return /*#__PURE__*/_jsxs(_Fragment, {\n        children: [/*#__PURE__*/_jsx(CheckMark, {\n          className: style.CheckMark\n        }), /*#__PURE__*/_jsx(\"div\", {\n          className: style.Text,\n          children: \"Congratulations ! NFT successfully bought.\"\n        }), /*#__PURE__*/_jsx(Link, {\n          href: \"/explore\",\n          children: /*#__PURE__*/_jsx(\"a\", {\n            className: style.Button,\n            children: \"Back to explore\"\n          })\n        })]\n      });\n    } else {\n      return /*#__PURE__*/_jsxs(_Fragment, {\n        children: [/*#__PURE__*/_jsx(\"div\", {\n          className: style.Text,\n          children: isRN ? 'Transaction in progress...' : 'Flash the QR Code on your mobile wallet to buy this NFT'\n        }), /*#__PURE__*/_jsxs(\"div\", {\n          className: style.QR,\n          children: [showQR && /*#__PURE__*/_jsx(QRCode, {\n            data: {\n              session,\n              nft_id: id\n            },\n            action: 'BUY'\n          }), loading && /*#__PURE__*/_jsxs(\"div\", {\n            className: style.Loading,\n            children: [/*#__PURE__*/_jsx(\"span\", {\n              className: style.Dot\n            }), /*#__PURE__*/_jsx(\"span\", {\n              className: style.Dot\n            }), /*#__PURE__*/_jsx(\"span\", {\n              className: style.Dot\n            })]\n          })]\n        })]\n      });\n    }\n  }\n\n  return /*#__PURE__*/_jsx(\"div\", {\n    className: style.Background,\n    children: /*#__PURE__*/_jsxs(\"div\", {\n      className: style.Container,\n      children: [/*#__PURE__*/_jsx(Close, {\n        onClick: () => setModalExpand(false),\n        className: style.Close\n      }), /*#__PURE__*/_jsx(\"div\", {\n        className: style.Title,\n        children: \"Buy NFT\"\n      }), manageTransaction(), error && /*#__PURE__*/_jsx(\"div\", {\n        className: style.Error,\n        children: error\n      })]\n    })\n  });\n};\n\nexport default ModalBuy;","map":null,"metadata":{},"sourceType":"module"}